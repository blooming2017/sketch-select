@import 'fc.cocoascript';
var callback = [];
callback =
	[{
		name: "Fill",
		fc: [function(layer, selectedLayer) {
			var color = firstVisibleFill(selectedLayer).color();

			if (layer.style().fills().count() > 0) {
				for (var i = 0; i < layer.style().fills().count(); i++) {
					if (layer.style().fills().objectAtIndex(i).color().isEqual(color) && layer.style().fills().objectAtIndex(i).isEnabled() && layer.isVisible()) {
						[layer select: true byExpandingSelection: true];
					}
				}

			}
		}]
	}, {
		name: "Border",
		fc: [function(layer, selectedLayer) {
			var color = firstVisibleBorder(selectedLayer).color();

			if (layer.style().borders().count() > 0) {
				for (var i = 0; i < layer.style().borders().count(); i++) {
					if (layer.style().borders().objectAtIndex(i).color().isEqual(color) && layer.style().borders().objectAtIndex(i).isEnabled() && layer.isVisible()) {
						[layer select: true byExpandingSelection: true];
					}
				}

			}
		}]
	}, {
		name: "BorderThickness",
		fc: [function(layer, selectedLayer) {
			var thickness = firstVisibleBorder(selectedLayer).thickness();

			if (layer.style().borders().count() > 0) {
				for (var i = 0; i < layer.style().borders().count(); i++) {
					if (layer.style().borders().objectAtIndex(i).thickness() == thickness && layer.style().borders().objectAtIndex(i).isEnabled() && layer.isVisible()) {
						[layer select: true byExpandingSelection: true];
					}
				}

			}
		}]
	}, {
		name: "Opacity",
		fc: [function(layer, selectedLayer) {
			if (selectedLayer.style().contextSettings().opacity() == layer.style().contextSettings().opacity() && layer.isVisible()) {
				[layer select: true byExpandingSelection: true];
			}
		}]
	}, {
		name: "BlendMode",
		fc: [function(layer, selectedLayer) {
			if (selectedLayer.style().contextSettings().blendMode() == layer.style().contextSettings().blendMode() && layer.isVisible()) {
				[layer select: true byExpandingSelection: true];
			}
		}]
	}, {
		name: "FontColor",
		fc: [function(layer, selectedLayer) {
			if (layer.class() == MSTextLayer) {
				var color1 = toRgba(layer.textColor());
				var color2 = toRgba(selectedLayer.textColor());
				if (color1 == color2) {
					[layer select: true byExpandingSelection: true];
				}
			}
		}]
	}, {
		name: "FontSize",
		fc: [function(layer, selectedLayer) {
			if (layer.class() == MSTextLayer) {
				if (selectedLayer.fontSize() == layer.fontSize()) {
					[layer select: true byExpandingSelection: true];
				}
			}
		}]
	}, {
		name: "FontStyle",
		fc: [function(layer, selectedLayer) {
			if (layer.class() == MSTextLayer) {
				var str1 = layer.CSSAttributeString().replace(/^\s+|\s+$/g, "");
				var str2 = selectedLayer.CSSAttributeString().replace(/^\s+|\s+$/g, "");
				if (str1 == str2) {
					[layer select: true byExpandingSelection: true];
				}
			}
		}]
	}, {
		name: "FontFamily",
		fc: [function(layer, selectedLayer) {
			if (layer.class() == MSTextLayer) {
				if (layer.fontPostscriptName() == selectedLayer.fontPostscriptName()) {
					[layer select: true byExpandingSelection: true];
				}
			}
		}]
	}, {
		name: "TextString",
		fc: [function(layer, selectedLayer) {
			if (layer.class() == MSTextLayer) {
				var str1 = layer.stringValue().replace(/^\s+|\s+$/g, "");
				var str2 = selectedLayer.stringValue().replace(/^\s+|\s+$/g, "");
				if (str1 == str2) {
					[layer select: true byExpandingSelection: true];
				}
			}
		}]
	}, {
		name: "LayerName",
		fc: [function(layer, selectedLayer) {
				var str1 = layer.name().replace(/^\s+|\s+$/g, "");
				var str2 = selectedLayer.name().replace(/^\s+|\s+$/g, "");
				if (str1 == str2) {
					[layer select: true byExpandingSelection: true];
				}
		}]
	}, {
		name: "SymbolName",
		fc: [function(layer, selectedLayer) {
			if (layer.isKindOfClass(MSSymbolInstance)) {
				var str1 = layer.symbolMaster().name();
				var str2 = selectedLayer.symbolMaster().name();
				if (str1 == str2) {
					[layer select: true byExpandingSelection: true];
				}
			}
		}]
	}, {
		name: "TextLayers",
		fc: [function(layer, selectedLayer) {
			if (layer.class() == MSTextLayer) {
				layer.addToSelection()
			}
		}]
	}, {
		name: "HiddenLayers",
		fc: [function(layer, selectedLayer) {
			if (layer.isVisible() == false) {
				[layer select: true byExpandingSelection: true];
			}
		}]
	}, {
		name: "LockedLayers",
		fc: [function(layer, selectedLayer) {
			if (layer.isLocked() == true) {
				[layer select: true byExpandingSelection: true];
			}
		}]
	}, {
		name: "SymbolLayers",
		fc: [function(layer, selectedLayer) {
			if (layer.isKindOfClass(MSSymbolInstance)) {
				[layer select: true byExpandingSelection: true];
			}
		}]
	}]

var toRgba = function(color) {
  return "rgba(" + String(Math.ceil(color.red().toFixed(2) * 255)) + ", " + String(Math.ceil(color.green().toFixed(2) * 255)) + ", " + String(Math.ceil(color.blue().toFixed(2) * 255)) + "," + String(color.alpha().toFixed(2)) + ")";
};
